// Generated by CoffeeScript 1.6.3
(function() {
  var PlayCommand, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  PlayCommand = (function(_super) {
    __extends(PlayCommand, _super);

    function PlayCommand() {
      _ref = PlayCommand.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    PlayCommand.prototype.play = function(songs) {
      return window.DoubanFM.player.play(songs[0]);
    };

    PlayCommand.prototype.listSongs = function() {
      var _this = this;
      console.log("List songs");
      if (this.channel.songs != null) {
        return this.play(this.channel.songs);
      } else {
        return this.channel.update(function(songs) {
          return _this.play(songs);
        }, function(status, error) {
          return _this.on_error;
        });
      }
    };

    PlayCommand.prototype.playChannel = function(channel_id) {
      var _ref1, _ref2;
      this.channel = (_ref1 = window.DoubanFM) != null ? (_ref2 = _ref1.channels) != null ? _ref2[channel_id] : void 0 : void 0;
      if (this.channel == null) {
        this.echo("Unknown channel " + channel_id);
      } else {
        this.echo("Play channel " + channel_id + "." + this.channel.name);
        this.listSongs();
      }
      return window.T.resume();
    };

    PlayCommand.prototype.execute = function(channel_id) {
      var _this = this;
      if (window.DoubanFM.channels != null) {
        return this.playChannel(channel_id);
      } else {
        this.echo("Requesting...");
        window.T.pause();
        return window.DoubanFM.update(function(channels) {
          return _this.playChannel(channel_id);
        }, function(status, error) {
          return _this.on_error(status, error);
        });
      }
    };

    return PlayCommand;

  })(window.CommandBase);

  (new PlayCommand("play", "Format: play <channel_id>. Play a channel.")).register();

}).call(this);

/*
//@ sourceMappingURL=command.play.map
*/
